buildscript {
	ext.kotlin_version = '1.6.10'

	repositories {
		mavenLocal()
		mavenCentral()
		maven { url 'https://plugins.gradle.org/m2' }
		maven { url 'https://jitpack.io' }
	}
	dependencies {
		classpath "dev.atsushieno:gradle-jnaerator-plugin:1.0.100.11"
		classpath "com.nativelibs4java:jnaerator:0.12"
	}
}

plugins {
	id "java"
	id "maven-publish"
	id "signing"
	id 'dev.atsushieno.jnaerator'
	id "me.champeau.gradle.japicmp" version '0.4.0'
}

group 'dev.atsushieno'
version '0.1.2'

repositories {
	mavenLocal()
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

configurations {
	baseline
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(14)
	}
}

project(':rtmidi-jna') {
	dependencies {
		compileOnly 'com.nativelibs4java:jnaerator-runtime:0.12'
		baseline('dev.atsushieno:rtmidi-jna:0.1.1') {
			transitive = false
			force = true
		}
	}

	jnaerator {
		libraryName 'rtmidi'
		packageName 'dev.atsushieno.rtmidi-jna'
		headerFiles "../external/rtmidi/rtmidi_c.h"
		// FIXME: sort out how to package those shared libraries to the right location (currently they are packages to the top directory)
		extraArgs "-arch", "linux_x64", "$rootDir/rtmidi-jna/natives/librtmidi.so", "-arch", "darwin_universal", "$rootDir/rtmidi-jna/natives/librtmidi.dylib", "-arch", "win64", "$rootDir/rtmidi-jna/natives/rtmidi.dll", "-runtime", "JNA" //, "-mode", "StandaloneJar"
	}

	sourceSets {
		main {
			resources {
				srcDirs "natives"
			}
		}
	}
}

// check API breakage
tasks.register("japicmp", me.champeau.gradle.japicmp.JapicmpTask) {
	oldArchives.from(configurations.baseline)
	newArchives.from(files(jar.archivePath))
	onlyModified = true
	failOnModification = true
	txtOutputFile = file("$buildDir/reports/japi.txt")
	ignoreMissingClasses = true
	includeSynthetic = true
}

check.dependsOn(japicmp)


// publisher settings
publishing {
	publications.all {
		from components.java

		pom {
			name.set('rtmidi-jna')
			description.set('rtmidi JNA binding with prebuilt binaries')
			url.set('https://github.com/atsushieno/rtmidi-jna')
			scm {
				url.set('https://github.com/atsushieno/rtmidi-jna')
			}
			licenses {
				license {
					name.set('the MIT License')
					url.set('https://github.com/atsushieno/rtmidi-jna/blob/main/LICENSE')
				}
			}
			developers {
				developer {
					id.set('atsushieno')
					name.set('Atsushi Eno')
					email.set('atsushieno@gmail.com')
				}
			}
		}
	}
}

// keep it as is. It is replaced by CI release builds
signing {}

apply from: "${rootDir}/publish-module.gradle"
