buildscript {
	ext.kotlin_version = '1.5.20'

	repositories {
		mavenLocal()
		mavenCentral()
		maven { url 'https://jitpack.io' }
	}
	dependencies {
		classpath "dev.atsushieno:gradle-jnaerator-plugin:1.0.100.11"
		classpath "com.nativelibs4java:jnaerator:0.12"
	}
}

plugins {
	id "java"
	id "maven-publish"
	id "signing"
	id 'dev.atsushieno.jnaerator'
}

group 'dev.atsushieno'
version '0.1.1'

repositories {
	mavenLocal()
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
}

project(':rtmidi-jna') {
	dependencies {
		compileOnly 'com.nativelibs4java:jnaerator-runtime:0.12'
	}

	jnaerator {
		libraryName 'rtmidi'
		packageName 'dev.atsushieno.rtmidi-jna'
		headerFiles "../external/rtmidi/rtmidi_c.h"
		extraArgs "-arch", "linux_x64", "$rootDir/rtmidi-jna/natives/librtmidi.so", "-arch", "darwin_universal", "$rootDir/rtmidi-jna/natives/librtmidi.dylib", "-arch", "win64", "$rootDir/rtmidi-jna/natives/rtmidi.dll"
	}

	sourceSets {
		main {
			resources {
				srcDirs "build/generated-sources/jnaerator/natives"
			}
		}
	}
}


publishing {
	publications.all {
		from components.java

		pom {
			name.set('rtmidi-jna')
			description.set('rtmidi JNA binding with prebuilt binaries')
			url.set('https://github.com/atsushieno/rtmidi-jna')
			scm {
				url.set('https://github.com/atsushieno/rtmidi-jna')
			}
			licenses {
				license {
					name.set('the MIT License')
					url.set('https://github.com/atsushieno/rtmidi-jna/blob/main/LICENSE')
				}
			}
			developers {
				developer {
					id.set('atsushieno')
					name.set('Atsushi Eno')
					email.set('atsushieno@gmail.com')
				}
			}
		}
	}
}

// keep it as is. It is replaced by CI release builds
signing {}

apply from: "${rootDir}/publish-module.gradle"
